@charset "utf-8";

#titTestId {
  font-style: italic;
}
/* 
동일한 아이디가 존재하더라도 스타일이 동시에 적용된다. 
*/

/* 사진 이동 예제 */
#targetImg {
  position: absolute;
  left: 0;
  transition: left 1s;
}
#targetImg.active {
  left: 400px;
}

/* 배경 색상 바꾸기 예제 */
.change_bgc .bgColor {
  width: 200px;
  height: 200px;
  background-color: #08f;
  transition: background-color 1s;
}
.change_bgc .bgColor.red {
  background-color: #f33;
}

/* 엘리베이터 버튼 누리고 취소 */
.elevatorButton {
  /* border-box가 뭐라고?????????? */
  box-sizing: border-box;
  width: 300px;
  height: 300px;
  background-color: #222;
  padding: 20px;
}
.elevatorButton .number {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}
.elevatorButton .number button {
  width: 100%;
  height: 100%;
  border-radius: 10%;
  font-size: 80px;
  border: 6px solid #a00;
  color: #a00;
  background-color: #999;
  cursor: pointer;
  /* 어차피 transition을 다 넣을 거라서 그냥 transition: 0.5s 라고 해도 된다. */
  transition: border 0.5s, color 0.5s, box-shadow 0.5s;
}
.elevatorButton .number button.active {
  border: 6px solid #f00;
  color: #f00;
  box-shadow: 0 0 10px #f00;
}

/* 로그인 팝업창 */
.pop_region {
}
.pop_region button {
  border: none;
  padding: 10px 20px;
  border-radius: 6px;
  background-color: #08f;
  color: #fff;
  cursor: pointer;
}
.dark_bg {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.5);
  /* 뒤로 숨길거면 z-index는 그냥 0보다 작으면 되서 -1로 한 거임 */
  z-index: -1;
  opacity: 0;
}
.dark_bg.active {
  /* active가 들어오면 보여주면 되니까 2, 1로 해주는데, 
    암막이 팝업창보다 또 앞에 오면 안된다.*/
  z-index: 2;
  opacity: 1;
  /* z-index나 display는 시간차가 적용이 안된다. */
  /* active가 걸릴때만 시간차가 적용되는 거다.  */
  transition: opacity 0.5s;
}
.popup {
  width: 300px;
  position: fixed;
  top: 50%;
  left: 50%;
  background-color: #fff;
  border-radius: 20px;
  box-sizing: border-box;
  padding: 20px;
  /* 정중앙으로 들어오게 해주는 방법 */
  transform: translate(-50%, -50%);
  /* 뒤로 빼주기 */
  z-index: -1;
  opacity: 0;
}
.popup.active {
  /* 얘가 2여도 문서 상에 더 뒤에 있는 팝업창이 앞에 있는건데,
    그냥 2보다 뒤 숫자인 3을 쓴 거임*/
  z-index: 3;
  opacity: 1;
  transition: opacity 0.5s;
}
.popup .close {
  position: absolute;
  /* 특수문자 font-size 조정 가능 */
  font-size: 40px;
  top: -50px;
  right: -50px;
  cursor: pointer;
  color: #fff;
}
.popup .inputLine {
  margin-bottom: 10px;
}
.popup .inputLine input {
  border: none;
  height: 40px;
  width: 100%;
  border-bottom: 1px solid #777;
}
.popup .inputBtn {
  display: flex;
  justify-content: center;
}
.popup .inputBtn button {
  width: 100px;
  padding: 10px 0;
  cursor: pointer;
  background-color: #07f;
  color: #fff;
  border: none;
  border-radius: 6px;
}

/* 메뉴 : 햄버거 아이콘 클릭에 의한 메뉴 보여주기 */
.menu_icon {
  position: fixed;
  top: 10px;
  right: 10px;
}
/* 왠만하면 ion-icon이라는 태그는 건들지 말기 */
.menu_icon button {
  border: none;
  background-color: transparent;
  font-size: 30px;
  cursor: pointer;
}

.res_menu {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.5);
  /* 암막이 내려오면서 보여지는거 하려고 위로 보낸 것*/
  transform: translateY(-100%);
}
.res_menu.active {
  transform: translateY(0%);
  transition: transform 0.5s;
}
.res_menu .close {
  position: absolute;
  top: 10px;
  font-size: 30px;
  transform: rotate(45deg);
  color: #bbb;
  cursor: pointer;
}
.res_menu .close:hover {
  color: #fff;
}
.res_menu ul {
  margin: 0;
  padding: 0;
  list-style: none;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  /* 웹에서는 gap이 적용이 되는데, 앱 ios에서는 적용이 안된다.  */
  gap: 10px;
}
.res_menu ul li {
  text-align: center;
}
.res_menu ul li a {
  text-decoration: none;
  color: #bbb;
  opacity: 0;
}
.res_menu.active ul li a {
  opacity: 1;
  transition: opacity 1.5s;
  /* transition-delay 설명
    About은 0.5 * 1
    Project는 0.5 * 2
    ...
    이런식으로 계산이 되는거다. 
  */
  transition-delay: calc(0.5s * var(--i));
}
/* 
.res_menu.active ul li:nth-child(1) a {
  transition-delay: 0.5s;
}
.res_menu.active ul li:nth-child(2) a {
  transition-delay: 1s;
}
.res_menu.active ul li:nth-child(3) a {
  transition-delay: 1.5s;
}
.res_menu.active ul li:nth-child(4) a {
  transition-delay: 2s;
}
*/

/* innerHTML 활용 */
.review1 {
  width: 300px;
  padding: 20px;
  background-color: #aff;
}
.review1 .add_review {
  display: none;
}
.review1 .add_review.active {
  display: inline;
}
.review1 .detail {
  display: block;
  text-align: right;
}
.review1 .detail span {
  cursor: pointer;
}

/* tabBox 영역 구성하기 */
.tabSpace {
  box-sizing: border-box;
  width: 300px;
  padding: 20px;
  background-color: #ddd;
}
.tabSpace .top {
  width: 100%;
  height: 200px;
  background-color: #aff;
  background-position: 50% 50%;
  background-size: cover;
  background-image: url(../img/tree-1.jpg);
}

.tabSpace .thumb {
  padding-top: 10px;
}
.tabSpace .thumb ul {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  gap: 10px;
}
.tabSpace .thumb ul li {
  box-sizing: border-box;
  width: calc(100% / 3);
  height: 60px;
  background-color: #f90;
  background-position: 50% 50%;
  background-size: cover;
  cursor: pointer;
}
.tabSpace .thumb ul li:nth-child(1) {
  background-image: url(../img/tree-1-thumb.jpg);
}
.tabSpace .thumb ul li:nth-child(2) {
  background-image: url(../img/tree-2-thumb.jpg);
}
.tabSpace .thumb ul li:nth-child(3) {
  background-image: url(../img/tree-3-thumb.jpg);
}
.tabSpace .thumb ul li.active {
  border: 4px solid red;
}
